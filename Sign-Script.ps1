Param
	( 
	[string]$ScriptFileName=$(Read-Host -Prompt "Path to script file to sign")
	)

if (!(Test-Path $ScriptFileName)) {
    Write-Error 'File not found'
    return
}
$certs = @(dir cert:currentuser\my\ -CodeSigningCert)
if ($certs.Count -lt 1) {
    Write-Error 'There is no Code Signing certificate in your certificate storage'
    return
} elseif ($certs.Count -gt 1) {
    $cert = $certs | Out-GridView -Title 'Select a code signing certificate' -OutputMode Single
} else {
    $cert = $certs[0]
}

"Signing the script file `"$ScriptFileName`" by the certificate `"$($cert.Subject)`" [Thumbprint: $($cert.Thumbprint)] ..."
Set-AuthenticodeSignature $ScriptFileName ($cert) -Verbose

# SIG # Begin signature block
# MIIKzgYJKoZIhvcNAQcCoIIKvzCCCrsCAQExCzAJBgUrDgMCGgUAMGkGCisGAQQB
# gjcCAQSgWzBZMDQGCisGAQQBgjcCAR4wJgIDAQAABBAfzDtgWUsITrck0sYpfvNR
# AgEAAgEAAgEAAgEAAgEAMCEwCQYFKw4DAhoFAAQU2oe24d9QVbeXnysZ9hqmubZU
# qM2gggc/MIIHOzCCBiOgAwIBAgIKPjsvgwAAAAABozANBgkqhkiG9w0BAQsFADBK
# MRMwEQYKCZImiZPyLGQBGRYDTEFOMRYwFAYKCZImiZPyLGQBGRYGSE9NRTI0MRsw
# GQYDVQQDExJIT01FMjQtRlBDLURDMDEtQ0EwHhcNMTgwNTI4MDg0MzQwWhcNMjIw
# NjI5MjAxNTIyWjCBkjETMBEGCgmSJomT8ixkARkWA0xBTjEWMBQGCgmSJomT8ixk
# ARkWBkhPTUUyNDEPMA0GA1UECxMGSE9NRTI0MQ0wCwYDVQQLEwR1c2VyMQswCQYD
# VQQLEwJJVDEaMBgGA1UECwwRdGVzdF9IYW5nb3V0c0NoYXQxGjAYBgNVBAMTEVl1
# cmlpIFBvbm9tYXJlbmtvMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA
# nAnArMW46ndumw8D26xMN0EzqrZfy3jWpGbuErbvo104MFkA0M9B+YRBIBpg9pyc
# jJHbD3gJt+DnL/PJvrlfQqNnBZ+0wamCjpZ3Fyxi4zZohJYR9U9luDxzLHlPTlVP
# kDyCUWK/8BnjYI2F+PkICl439hLKIgJFNtgWjiqoqkkHcal5pmDHExvnPYN236e/
# rLNy5QG4fMCeJVAMBEMxK3yqHVKHUabGuqoleXS+D0ZeENJjBv+dtwM69+IaOgbx
# H9rsNg2NFIeqBSRPedZlEO4J6HHyOMEMZaOoJ7SalJzd6glX3TVyZg3oQ5kA9mKg
# 17dG21qSzXbDZLQebzTpupyfF4cJzfgtuF5HKGJI+h1YUmxUkb88kzD4xq4p+6Ac
# FMQCRNBdjNQ3epabsH6Y1/YYhYaKFQ7FHsjHpCLXcJK5IsL+Sdeos2JBToSCPS57
# oY6SGLzoCgW+5a+3fL1ltjdwgQOeY+pOAavDMhdA1XD6gx98r0jttY4kQGkQb0FG
# vtxOir+byCW8ylasybN81m6FlfrTjCtcTJk0hHVDXyAnKwitLwVubk4igzh3gdY+
# Oe4qaOXu27crd8gHpBShl82OxGlT8dSA3+CG4r39iVBN2SfDYxUQ4CgvH/yTr5pq
# 8QsfmmrODYQQ4NeZ93mUExvhA5vgZGfh7E+Ac5JYT5ECAwEAAaOCAtgwggLUMD0G
# CSsGAQQBgjcVBwQwMC4GJisGAQQBgjcVCIKe4wCE4OtDhbGPLoLe9wOFkbFkgSCr
# +ACHtK9ZAgFkAgEDMBMGA1UdJQQMMAoGCCsGAQUFBwMDMA4GA1UdDwEB/wQEAwIH
# gDAbBgkrBgEEAYI3FQoEDjAMMAoGCCsGAQUFBwMDMB0GA1UdDgQWBBR+J9qFfyQ6
# OUAFeor4elWZLMMrgjAfBgNVHSMEGDAWgBT5txsgAMNmojURI9R4BRyOej9UNzCC
# AREGA1UdHwSCAQgwggEEMIIBAKCB/aCB+oaBuWxkYXA6Ly8vQ049SE9NRTI0LUZQ
# Qy1EQzAxLUNBLENOPUZQQy1EQzAxLENOPUNEUCxDTj1QdWJsaWMlMjBLZXklMjBT
# ZXJ2aWNlcyxDTj1TZXJ2aWNlcyxDTj1Db25maWd1cmF0aW9uLERDPUhPTUUyNCxE
# Qz1MQU4/Y2VydGlmaWNhdGVSZXZvY2F0aW9uTGlzdD9iYXNlP29iamVjdENsYXNz
# PWNSTERpc3RyaWJ1dGlvblBvaW50hjxodHRwOi8vZnBjLWRjMDEuaG9tZTI0Lmxh
# bi9DZXJ0RW5yb2xsL0hPTUUyNC1GUEMtREMwMS1DQS5jcmwwgcMGCCsGAQUFBwEB
# BIG2MIGzMIGwBggrBgEFBQcwAoaBo2xkYXA6Ly8vQ049SE9NRTI0LUZQQy1EQzAx
# LUNBLENOPUFJQSxDTj1QdWJsaWMlMjBLZXklMjBTZXJ2aWNlcyxDTj1TZXJ2aWNl
# cyxDTj1Db25maWd1cmF0aW9uLERDPUhPTUUyNCxEQz1MQU4/Y0FDZXJ0aWZpY2F0
# ZT9iYXNlP29iamVjdENsYXNzPWNlcnRpZmljYXRpb25BdXRob3JpdHkwNgYDVR0R
# BC8wLaArBgorBgEEAYI3FAIDoB0MG3l1cmlpLnBvbm9tYXJlbmtvQGhvbWUyNC5k
# ZTANBgkqhkiG9w0BAQsFAAOCAQEAKjUiMzO4ZMECYjavWwPk8Conw0Ye9Jbex/yD
# qFtIUllpRpArN505Mvj3qVrkz8F6bpKVzCa4vmqFR7G9wmtsWnIK+OOcXtdVGr+0
# J7/ZD2pMZUVoGgHIiw3MCli48vbNTjHpKuLGjyFEtlKvbWWQyB6pRpZ0ZF4MES71
# lh+TMhvA7D1KKf2+cXlrd1Y5qqjtCMgYkhT/dheHkVJ8+tesnHkRA6BAmZpTmaYv
# exMFlE6PY5YGYcbVgqDE+ZzOz34YLlDjJ6at7FygfSADt8i3zYtvs87YeXBB+yHK
# 3dU67MUsllvJzfKIEBVGK39a8ULjZeJf92FKSjKuTyERPnSo3TGCAvkwggL1AgEB
# MFgwSjETMBEGCgmSJomT8ixkARkWA0xBTjEWMBQGCgmSJomT8ixkARkWBkhPTUUy
# NDEbMBkGA1UEAxMSSE9NRTI0LUZQQy1EQzAxLUNBAgo+Oy+DAAAAAAGjMAkGBSsO
# AwIaBQCgeDAYBgorBgEEAYI3AgEMMQowCKACgAChAoAAMBkGCSqGSIb3DQEJAzEM
# BgorBgEEAYI3AgEEMBwGCisGAQQBgjcCAQsxDjAMBgorBgEEAYI3AgEVMCMGCSqG
# SIb3DQEJBDEWBBRBBPaxVRpwYfITILbppFuynLktfTANBgkqhkiG9w0BAQEFAASC
# AgBCz/qUl2pVaeNZdFqP6Wxkz4q+f9LjlXUqGdZ9rsXPotPK661jBSKziX9X5pSh
# cVj9TJ7+P1Z3CXYVb4HdASwY91NX1jA7hSTIu4ScBnqZ2Sjj9tw4QAXU2yj84bPN
# EUqqbmqpSJ9stJpcJprvF8C2otH+wnLjUO2Uc26B6rULeqvBoGaLRdbZz3MwNKFF
# GBc6g5o6AsT3G8dYLa0kofsW9kh3+KkX4qdMOwgfo0cGzbaG97+Zn8PZxhH+iipP
# ekEVJnWP8N6gpdAS6jXeWlrVx4MXO0Y19ZmpcOpWWuA2NJ5iwr4ifKM8bsXj7iA3
# AXtbnb16B0b7XMuwd9FXcXaOtKVBmJLbhskDsKXzq3AEaEUFMA4/ZG2Ty2N3ASDw
# GnqXXeEW3QVY21w+e/kTjG9h58HX4tlpWvPggW1eCoEPdUcJmcr3l011EYM544ZH
# 2WJ/mTLaGRnO+c1Mb9A5H2H2RXNEI+px5kpbfeexQlc/2xsZh/4cyLkYHe6cn/lu
# LT/UQlD0UEQGJweyVXxDjZx/a+47Vn9LBRXQbSKEFQDiec8LypzaRdmoQ3w2mwZu
# s1zAFuDbEHcMPRsbL/BfVBTqZXyVbGERwIZFQpP6ovV77sVteZ1K1CvflFpZhKpt
# igCcZp33ZzKK1dAeymnJqqhC4gjP2IL2TFr8QapPz1R/dw==
# SIG # End signature block
